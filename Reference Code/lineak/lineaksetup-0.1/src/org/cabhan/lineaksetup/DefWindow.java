/*  lineaksetup - Configuration Utility for the LinEAK daemon
 *  Copyright (C) 2005  Alex Brick
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

package org.cabhan.lineaksetup;

import org.eclipse.swt.*;
import org.eclipse.swt.widgets.*;
import org.eclipse.swt.layout.*;
import org.eclipse.swt.events.*;

import java.io.*;

/**
 * Generates a GUI that prompts for the location of the Definition file
 * @author Alex Brick
 * @version 0.1
 */
public class DefWindow implements SelectionListener
{
    private Shell s;
    private Text file;
    private Button next;
    private Button open;
    
    /**
     * Generates the GUI and displays it
     * @param d the <code>Display</code> to attach to
     */
    public DefWindow(Display d)
    {
        s = new Shell(d);
        s.setText("LinEAK Configuration Tool");
        s.setLayout(new RowLayout(SWT.VERTICAL));
        
        String defFileLoc = findDefFile();
        
        Composite c1 = new Composite(s, SWT.NONE);
        c1.setLayout(new FillLayout(SWT.HORIZONTAL));
        
        Label instructions = new Label(c1, SWT.WRAP);
        
        Composite c2 = new Composite(s, SWT.NONE);
        c2.setLayout(new RowLayout(SWT.HORIZONTAL));
        
        file = new Text(c2, SWT.SINGLE|SWT.BORDER);
        RowData fileData = new RowData();
        fileData.width = 250;
        file.setLayoutData(fileData);
        
        if(defFileLoc == null)
        {
            instructions.setText("We could not autodetect your LinEAK Definition File.\n\n" +
            		"Please enter the file's location.");
        	
            open = new Button(c2, SWT.PUSH|SWT.CENTER);
            open.setText("Open File...");
            open.addSelectionListener(this);
        }
        else
        {
            instructions.setText("We have automatically detected the location of your " +
                    "Definition File.");
            
            file.setText(defFileLoc);
            file.setEditable(false);
        }
        
        next = new Button(c2, SWT.PUSH|SWT.RIGHT);
        next.setText("Next >>");
        next.addSelectionListener(this);
        
        
        s.pack();
        s.open();
        
        while(!s.isDisposed())
            if(!d.readAndDispatch())
                d.sleep();
            d.dispose();
    }
    
    /**
     * Looks in the default locations for the Definition file
     * @return the location of the Definition File if found, or null otherwise
     */
    private String findDefFile()
    {
        String loc = new String(System.getProperty("user.home") + "/.lineak/lineakkb.def");
        File theFile = new File(loc);
        
        if(theFile.exists())
            return loc;
        
        loc = new String("/etc/lineakkb.def");
        
        theFile = new File(loc);
        
        if(theFile.exists())
            return loc;
        
        return null;
    }
    
    /**
     * A basic test program
     * @param args commandline arguments
     */
    public static void main(String[] args)
    {
        Display d = new Display();
        DefWindow def = new DefWindow(d);
    }
    
    /**
     * Handles all <code>SelectionEvent</code>'s generated by this GUI
     */
    public void widgetSelected(SelectionEvent e)
    {
        if(e.getSource() == next)
        {
            String text = file.getText();
            
            if(text.length() == 0)
            {
                MessageBox message = new MessageBox(s, SWT.ICON_ERROR);
                message.setText("No Location!!");
                message.setMessage("You Didn't Enter A Location!!");
                
                message.open();
            }
            else
            {
                try
                {
                    File theFile = new File(text);
                    if(!theFile.exists())
                    {
                        MessageBox message = new MessageBox(s, SWT.ICON_ERROR);
                        message.setText("Doesn't Exist!");
                        message.setMessage("The File You Entered Doesn't Exist!!");
                        
                        message.open();
                        return;
                    }
                    
                    Driver.setDefFile(theFile);
                    s.dispose();
                    Driver.moreInfo();
                }
                catch(SecurityException i)
                {
                    MessageBox message = new MessageBox(s, SWT.ICON_ERROR);
                    message.setText("SecurityException!");
                    message.setMessage("The File You Entered is Unreadable!!");
                    
                    message.open();
                    return;
                }
            }
        }
        else if(e.getSource() == open)
        {
            FileDialog fileOpener = new FileDialog(s,SWT.OPEN);
            String fileName = fileOpener.open();
            
            if(fileName != null)
                file.setText(fileName);
        }
    }
    
    /**
     * Exists soley to satisfy the <code>SelectionListener</code> interface
     */
    public void widgetDefaultSelected(SelectionEvent e)
    {
        // empty
    }
}